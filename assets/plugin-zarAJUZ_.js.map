{"version":3,"mappings":";qIAUA,MAAMA,EAAQC,EAAMC,KAAK,IAAMC,EAAA,WAAO,6BAA2B,EAAC,+CAI5DC,EAAqBA,IAAM,OAC7B,MAAMC,GAAUC,WACXC,cAAc,6BAA6B,IADhCD,cAEVE,aAAa,WACfH,UAAWA,IAAY,qBAChBA,EAEJ,IACX,EAEMI,EAA2CC,GACzC,CAACA,GAAoBA,IAAqB,GACnC,CAAE,EAENA,EAAiBC,MAAM,GAAG,EAK/BC,EAAW,GAEXC,EACFC,EAAYC,sCAAwC,OAClDC,EAAsBP,EACxBK,EAAYG,iCAChB,EAEMC,EAAY,CACdC,IAAKf,KAAwBU,KAC7BM,QAASN,kBACTO,WAAYP,UACZQ,WAAYC,SAAST,EAAYU,2BAA2B,EAC5DC,WAAYX,GACZY,OAAQd,EACRe,SAAUb,EAAYc,+BAAiC,OACvDC,UAAWf,MACf,EAEMgB,EAAe,CACjB,GAAGZ,EACHa,cAAef,CACnB,EAEMgB,EAAMA,CAAC,CAAEC,QAAO,UACjBC,EAAW,IAAID,EACZ,eAAChC,EAAM,SAAN,CACG,eACKkC,EAAM,OAAOC,EAAOC,MACjB,SAACC,MAAAC,EACG,gBAACC,EAAc,IACnB,EACJ,EAGJ,SAACF,EAAA,IAAAtC,EAAA,CAAM,OAAAiC,CAAe,EAC1B,GACJ,EAGJD,EAAIS,UAAY,CACZR,OAAQS,EAAUC,MACtB,EAEA,MAAMC,EAASA,CAAC,CAAEX,QAAO,IAEhBK,MAAAO,GACG,SAACP,MAAAQ,EAAA,CACG,OAAAb,EACA,cAAejB,EACf,MAAAhB,EAAa,EAErB,EAIR4C,EAAOH,UAAY,CACfR,OAAQS,EAAUC,MACtB,EAEA,MAAMI,EAAcA,IACClC,EAGTyB,EAAA,IAAAN,EAAI,QAAQd,EAAa,EAFrBoB,EAAA,IAAAM,EAAO,QAAQd,EAAgB,ECxFzCkB,EAAY1C,SAAS2C,eAAe,gBAAgB,EACpDC,EAAOC,EAAWH,CAAS,EACjCE,EAAKE,OAEGC,OAAAC,EAAA,oBAAAhB,EAAA,IAACiB,EAAQ,UACRX,EAAM,KACX,CACJ","names":["D2App","React","lazy","__vitePreload","getInjectedBaseUrl","baseUrl","document","querySelector","getAttribute","parseRequiredProps","propsEnvVariable","split","isPlugin","skipPluginLogic","process","REACT_APP_DHIS2_APP_SKIPPLUGINLOGIC","requiredPluginProps","REACT_APP_DHIS2_APP_REQUIREDPROPS","appConfig","url","appName","appVersion","apiVersion","parseInt","REACT_APP_DHIS2_API_VERSION","pwaEnabled","plugin","loginApp","REACT_APP_DHIS2_APP_LOGINAPP","direction","pluginConfig","requiredProps","App","config","AppAdapter","Layer","layers","alert","jsx","CenteredContent","CircularLoader","propTypes","PropTypes","object","Plugin","PluginOuterErrorBoundary","PluginLoader","AppOrPlugin","container","getElementById","root","createRoot","render","jsxs","Fragment","CssReset"],"ignoreList":[],"sources":["../../src/Plugin.jsx","../../src/plugin.index.jsx"],"sourcesContent":["import AppAdapter from '@dhis2/app-adapter'\nimport { Layer, layers, CenteredContent, CircularLoader } from '@dhis2/ui'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { PluginLoader } from './PluginLoader.jsx'\nimport { PluginOuterErrorBoundary } from './PluginOuterErrorBoundary.jsx'\n\n// This placeholder component gets replaced at shell-bootstrapping time by\n// `React.lazy(() => import('./D2App/<entryPoint>'))`\n// The lazy import provides bundle splitting\nconst D2App = React.lazy(() => import('./D2App/PluginWrapper.jsx'))\n\n// Injected by backend when serving index or plugin HTML\n// https://github.com/dhis2/dhis2-core/pull/16703\nconst getInjectedBaseUrl = () => {\n    const baseUrl = document\n        .querySelector('meta[name=\"dhis2-base-url\"]')\n        ?.getAttribute('content')\n    if (baseUrl && baseUrl !== '__DHIS2_BASE_URL__') {\n        return baseUrl\n    }\n    return null\n}\n\nconst parseRequiredProps = (propsEnvVariable) => {\n    if (!propsEnvVariable || propsEnvVariable === '') {\n        return []\n    }\n    return propsEnvVariable.split(',')\n}\n\n// Since apps and plugins share the same env with Vite, this value is injected\n// via string replacement in cli/src/lib/compiler/entrypoints.js\nconst isPlugin = true\n\nconst skipPluginLogic =\n    process.env.REACT_APP_DHIS2_APP_SKIPPLUGINLOGIC === 'true'\nconst requiredPluginProps = parseRequiredProps(\n    process.env.REACT_APP_DHIS2_APP_REQUIREDPROPS\n)\n\nconst appConfig = {\n    url: getInjectedBaseUrl() || process.env.REACT_APP_DHIS2_BASE_URL,\n    appName: process.env.REACT_APP_DHIS2_APP_NAME || '',\n    appVersion: process.env.REACT_APP_DHIS2_APP_VERSION || '',\n    apiVersion: parseInt(process.env.REACT_APP_DHIS2_API_VERSION),\n    pwaEnabled: process.env.REACT_APP_DHIS2_APP_PWA_ENABLED === 'true',\n    plugin: isPlugin,\n    loginApp: process.env.REACT_APP_DHIS2_APP_LOGINAPP === 'true',\n    direction: process.env.REACT_APP_DHIS2_APP_DIRECTION,\n}\n\nconst pluginConfig = {\n    ...appConfig,\n    requiredProps: requiredPluginProps,\n}\n\nconst App = ({ config }) => (\n    <AppAdapter {...config}>\n        <React.Suspense\n            fallback={\n                <Layer level={layers.alert}>\n                    <CenteredContent>\n                        <CircularLoader />\n                    </CenteredContent>\n                </Layer>\n            }\n        >\n            <D2App config={config} />\n        </React.Suspense>\n    </AppAdapter>\n)\n\nApp.propTypes = {\n    config: PropTypes.object,\n}\n\nconst Plugin = ({ config }) => {\n    return (\n        <PluginOuterErrorBoundary>\n            <PluginLoader\n                config={config}\n                requiredProps={requiredPluginProps}\n                D2App={D2App}\n            />\n        </PluginOuterErrorBoundary>\n    )\n}\n\nPlugin.propTypes = {\n    config: PropTypes.object,\n}\n\nconst AppOrPlugin = () => {\n    if (isPlugin && !skipPluginLogic) {\n        return <Plugin config={pluginConfig} />\n    }\n    return <App config={appConfig} />\n}\n\nexport default AppOrPlugin\n","import { CssReset } from '@dhis2/ui'\nimport React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport Plugin from './Plugin.jsx'\nimport 'typeface-roboto'\nimport './index.css'\n\nconst container = document.getElementById('dhis2-app-root')\nconst root = createRoot(container)\nroot.render(\n    <>\n        <CssReset />\n        <Plugin />\n    </>\n)\n"],"file":"assets/plugin-zarAJUZ_.js"}